import 'package:flutter/material.dart';

class QuestionDialogs {
  /// M·ªü dialog s·ª≠a n·ªôi dung, tr·∫£ v·ªÅ text m·ªõi (null n·∫øu hu·ª∑)
  static Future<String?> editText(
      BuildContext context, String currentText) async {
    final ctrl = TextEditingController(text: currentText);
    final ok = await showDialog<bool>(
      context: context,
      builder: (ctx) => AlertDialog(
        title: const Text('‚úèÔ∏è S·ª≠a n·ªôi dung c√¢u h·ªèi'),
        content: TextField(
          controller: ctrl,
          maxLines: 3,
          decoration: const InputDecoration(
            border: OutlineInputBorder(),
            hintText: 'Nh·∫≠p n·ªôi dung m·ªõi...',
          ),
        ),
        actions: [
          TextButton(
              onPressed: () => Navigator.pop(ctx, false),
              child: const Text('Hu·ª∑')),
          FilledButton(
              onPressed: () => Navigator.pop(ctx, true),
              child: const Text('L∆∞u')),
        ],
      ),
    );
    if (ok == true) {
      final text = ctrl.text.trim();
      return text.isEmpty ? null : text;
    }
    return null;
  }

  /// M·ªü dialog c·∫≠p nh·∫≠t th·ª© t·ª±, tr·∫£ v·ªÅ order m·ªõi (null n·∫øu hu·ª∑)
  static Future<int?> editOrder(BuildContext context, int currentOrder) async {
    final ctrl = TextEditingController(text: currentOrder.toString());
    final ok = await showDialog<bool>(
      context: context,
      builder: (ctx) => AlertDialog(
        title: const Text('üî¢ C·∫≠p nh·∫≠t th·ª© t·ª±'),
        content: TextField(
          controller: ctrl,
          keyboardType: TextInputType.number,
          decoration: const InputDecoration(
            border: OutlineInputBorder(),
            hintText: 'Nh·∫≠p s·ªë th·ª© t·ª±...',
          ),
        ),
        actions: [
          TextButton(
              onPressed: () => Navigator.pop(ctx, false),
              child: const Text('Hu·ª∑')),
          FilledButton(
              onPressed: () => Navigator.pop(ctx, true),
              child: const Text('L∆∞u')),
        ],
      ),
    );
    if (ok == true) {
      final v = int.tryParse(ctrl.text.trim());
      if (v != null && v >= 0) return v;
    }
    return null;
  }

  /// Confirm xo√°, true n·∫øu ƒë·ªìng √Ω
  static Future<bool> confirmDelete(BuildContext context, int id) async {
    final yes = await showDialog<bool>(
      context: context,
      builder: (ctx) => AlertDialog(
        title: const Text('üóëÔ∏è Xo√° c√¢u h·ªèi'),
        content: const Text('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a c√¢u h·ªèi n√†y?\n\nL∆∞u √Ω:\n- T·∫•t c·∫£ c√¢u tr·∫£ l·ªùi s·∫Ω b·ªã x√≥a\n- Th·ª© t·ª± c√°c c√¢u h·ªèi s·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t l·∫°i'),
        actions: [
          TextButton(
              onPressed: () => Navigator.pop(ctx, false),
              child: const Text('Kh√¥ng')),
          FilledButton(
              onPressed: () => Navigator.pop(ctx, true),
              child: const Text('Xo√° lu√¥n')),
        ],
      ),
    );
    return yes == true;
  }
}
